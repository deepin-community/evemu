'\" t
.\"     Title: evemu-describe
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 09/25/2017
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "EVEMU\-DESCRIBE" "1" "09/25/2017" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
evemu-describe, evemu-record \- print information and events from an input device
.SH "SYNOPSIS"
.sp
.nf
evemu\-describe [/dev/input/eventX] [output file]
.fi
.sp
.nf
evemu\-record [\-\-autorestart=s] [/dev/input/eventX] [output file]
.fi
.SH "DESCRIPTION"
.sp
evemu\-describe gathers information about the input device and prints it to stdout\&. This information can be parsed by evemu\-device(1) to create a virtual input device with the same properties\&.
.sp
evemu\-record captures events from the input device and prints them to stdout\&. The events can be parsed by evemu\-play(1) to let a virtual input device created with evemu\-device(1) emit the exact same event sequence\&.
.sp
evemu\-describe and evemu\-record need to be able to read from the device; in most cases this means they must be run as root\&.
.sp
If an event node is provided, evemu\-describe and evemu\-record use that event node\&. Otherwise, the user must interactively choose from a list of detected devices\&.
.sp
If no output file is given, stdout is used\&.
.SH "OPTIONS"
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-autorestart=<s>
      Terminate the current recording after <s> seconds of device
      inactivity\&. This option requires an output, the file is suffixed
      with the date and time of the recording\*(Aqs start\&.
      The timeout must be greater than 0\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
If evtest\-record does not see any events even though the device is being used, the device may be grabbed by a process (EVIOCGRAB)\&. This is usually the case when debugging a synaptics or wacom device from within X\&. VT switching to a TTY or shutting down the X server terminates this grab and the devices can be recorded\&. For most X drivers, disabling the device also removes the grab\&.
.sp
The following command shows the processes with an open file descriptor on the device\&.
.sp
.if n \{\
.RS 4
.\}
.nf
fuser \-v /dev/input/eventX
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
evemu\-device(1) evemu\-play(1)
.SH "AUTHOR"
.sp
evemu was written by Henrik Rydberg <\m[blue]\fBrydberg@euromail\&.se\fR\m[]\&\s-2\u[1]\d\s+2>
.SH "NOTES"
.IP " 1." 4
rydberg@euromail.se
.RS 4
\%mailto:rydberg@euromail.se
.RE
