'\" t
.\"     Title: evemu-device
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/14/2016
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "EVEMU\-DEVICE" "1" "12/14/2016" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
evemu-device, evemu-play, evemu-event \- create a virtual input device and replay an event sequence
.SH "SYNOPSIS"
.sp
.nf
evemu\-device [description\-file]
.fi
.sp
.nf
evemu\-play /dev/input/eventX < event\-sequence
evemu\-play event\-sequence\&.txt
.fi
.sp
.nf
evemu\-event /dev/input/eventX [\-\-sync] \-\-type <type> \-\-code <code> \-\-value <value>
.fi
.SH "DESCRIPTION"
.sp
evemu\-device creates a virtual input device based on the description\-file\&. This description is usually created by evemu\-describe(1)\&. evemu\-device then creates a new input device with uinput and prints the name and the device file to stdout\&.
.sp
evemu\-play replays the event sequence given on stdin through the input device\&. The event sequence must be in the form created by evemu\-record(1)\&. If the argument is a file containing a recording, evemu\-play creates the device and prompts the user for an interactive replay of the events\&.
.sp
evemu\-event plays exactly one event with the current time\&. If \fB\-\-sync\fR is given, evemu\-event generates an \fBEV_SYN\fR event after the event\&. The event type and code may be specified as the numerical value or the symbolic name from linux/input\&.h\&.
.sp
evemu\-device must be able to write to the uinput device node, and evemu\-play must be able to write to the device node specified; in most cases this means it must be run as root\&.
.SH "SEE ALSO"
.sp
evemu\-describe(1) evemu\-record(1)
.SH "AUTHOR"
.sp
evemu was written by Henrik Rydberg <\m[blue]\fBrydberg@euromail\&.se\fR\m[]\&\s-2\u[1]\d\s+2>
.SH "NOTES"
.IP " 1." 4
rydberg@euromail.se
.RS 4
\%mailto:rydberg@euromail.se
.RE
